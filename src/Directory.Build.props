<Project>
    <Import Project="$([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../'))" Condition="Exists($([MSBuild]::GetPathOfFileAbove('Directory.Build.props', '$(MSBuildThisFileDirectory)../')))" />

    <PropertyGroup>
        <!-- We need to determine whether or not this is a enerator project -->
        <IsGeneratorProject Condition="'$(MSBuildProjectName)' == ''">false</IsGeneratorProject>
        <IsGeneratorProject Condition="'$(MSBuildProjectName.EndsWith(.Generator))'">true</IsGeneratorProject>
        <!-- Skip versioning on debug builds for performance -->
        <MinVerSkip Condition="'$(Configuration)' == 'Debug'">true</MinVerSkip>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    </PropertyGroup>

    <!-- Ensure that our packages are built properly for none generator projects-->
    <PropertyGroup Condition="$(IsGeneratorProject) != 'true'">
        <IsPackable>true</IsPackable>
        <UseArtifactsOutput>true</UseArtifactsOutput>
        <EnablePackageValidation>true</EnablePackageValidation>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>embedded</DebugType>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <!-- https://learn.microsoft.com/en-us/dotnet/core/deploying/native-aot/?tabs=windows%2Cnet8#aot-compatibility-analyzers -->
        <IsAotCompatible>true</IsAotCompatible>
    </PropertyGroup>

    <!-- For generator projects we need to modify the settings in a different way -->
    <PropertyGroup Condition="$(IsGeneratorProject) == 'true'">
        <DevelopmentDependency>true</DevelopmentDependency>
        <TargetFramework>netstandard2.0</TargetFramework>
        <TargetFrameworks />
        <LangVersion>latest</LangVersion>
        <OutputType>Library</OutputType>
        <PackageType>Analyzer</PackageType>
        <IsRoslynComponent>true</IsRoslynComponent>
        <EnforceExtendedAnalyzerRules>true</EnforceExtendedAnalyzerRules>
        <IncludeBuildOutput>false</IncludeBuildOutput>
        <!-- if you don't have this, then warnings as errors kicks out the package generation. -->
        <NoWarn>$(NoWarn);NU5128</NoWarn>
    </PropertyGroup>
    <ItemGroup Condition="$(IsGeneratorProject) == 'true'">
        <!-- force the package to go into the right place. Requires <IncludeBuildOutput>false</IncludeBuildOutput> -->
        <None Include="$(OutputPath)\$(AssemblyName).dll" Pack="true" PackagePath="analyzers/dotnet/cs" />
    </ItemGroup>
    <!-- If the package has a corresponding generator, ensure that's packaged properly as well -->
    <ItemGroup Condition="Exists('../$(ProjectName).Generator/$(ProjectName).Generator.csproj')">
        <ProjectReference Include="../$(ProjectName).Generator/$(ProjectName).Generator.csproj" IncludeAssets="Analyzers" />
    </ItemGroup>

    <!-- Include the readme's so we can see them -->
    <ItemGroup>
        <None Include="README.md" Condition="EXISTS('README.md')" Pack="true" />
    </ItemGroup>

    <!-- Ensure that we have versioning, reproducible builds and analyzers for all projects -->
    <ItemGroup>
        <PackageReference Include="DotNet.ReproducibleBuilds" Version="1.2.25">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="Microsoft.VisualStudio.Threading.Analyzers" Version="17.14.15">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
    </ItemGroup>

</Project>
